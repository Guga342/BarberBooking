## Título do Projeto
Template de Site para Barbearia com Sistema de Agendamento Automatizado

## Objetivo Principal
Criar um template de site moderno, responsivo e funcional para barbearias. O recurso principal e mais importante é um sistema de agendamento online que automatiza o processo de marcação de horários, ajudando a barbearia a gerenciar seus clientes e horários de forma eficiente e a evitar horários vagos.

## Tecnologias Sugeridas
- **Frontend:** HTML5, CSS3, JavaScript.
- **Framework CSS:** Bootstrap 5 (para garantir responsividade e um design limpo rapidamente).
- **Backend:** Node.js com Express.js (ideal para lidar com as requisições de agendamento e interagir com o banco de dados).
- **Banco de Dados:** SQLite (simples, baseado em arquivo e perfeito para projetos de pequeno e médio porte no Replit, não requer configuração complexa).

## Estrutura do Site (Páginas e Seções)

**1. Página Inicial (index.html)**
   - **Header:** Logo da barbearia, menu de navegação (Início, Serviços, Agendamento, Contato).
   - **Seção "Hero":** Uma imagem de alta qualidade ou vídeo de fundo, com um título chamativo (ex: "Tradição e Estilo em Cada Corte") e um botão de Call-to-Action principal: **"Agende Seu Horário"**.
   - **Seção "Nossos Serviços":** Uma prévia dos 3 principais serviços oferecidos (ex: Corte, Barba, Combo), com ícones e um link para a página completa de serviços.
   - **Seção "Sobre Nós":** Um breve parágrafo sobre a história e os valores da barbearia.
   - **Seção "Depoimentos":** Espaço para 2 ou 3 depoimentos de clientes satisfeitos.
   - **Footer:** Informações de contato, endereço, links para redes sociais e horário de funcionamento.

**2. Página de Serviços (servicos.html)**
   - Uma lista detalhada de todos os serviços oferecidos (Corte de Cabelo, Barba Terapia, Pezinho, Sobrancelha, etc.).
   - Cada serviço deve ter: Nome, breve descrição, duração estimada e preço.
   - Incluir um botão "Agendar Agora" ao lado de cada serviço, que leva para a página de agendamento já com o serviço pré-selecionado.

**3. Página de Agendamento (agendamento.html) - O CORE DO PROJETO**
   - Esta é a página mais importante e deve ser um formulário interativo de múltiplos passos:
     - **Passo 1: Seleção do Serviço:** O usuário seleciona um ou mais serviços da lista. O sistema deve calcular o tempo total necessário.
     - **Passo 2: Seleção do Barbeiro (Opcional):** Se a barbearia tiver mais de um profissional, o cliente pode escolher seu preferido ou selecionar "Qualquer um".
     - **Passo 3: Seleção da Data e Hora:**
       - Exibir um calendário onde o usuário seleciona o dia.
       - Com base no dia, serviço e barbeiro selecionado, o sistema deve consultar o banco de dados e exibir **APENAS os horários disponíveis** em blocos (ex: 09:00, 09:45, 10:30). Horários já ocupados ou fora do expediente não devem aparecer.
     - **Passo 4: Dados do Cliente:** Campos para Nome, Telefone (WhatsApp) e E-mail.
     - **Passo 5: Confirmação:** Mostrar um resumo completo do agendamento (Serviço, Barbeiro, Data, Hora, Seus Dados) e um botão final **"Confirmar Agendamento"**.

**4. Página de Contato (contato.html)**
   - Formulário de contato simples (Nome, E-mail, Mensagem).
   - Mapa do Google Maps incorporado com a localização da barbearia.
   - Endereço completo, telefone e e-mail visíveis.

## Lógica do Backend e Automação (Node.js + SQLite)

**1. Banco de Dados (SQLite):**
   - Crie uma tabela `agendamentos` com as colunas: `id`, `nome_cliente`, `telefone_cliente`, `email_cliente`, `servico_id`, `barbeiro_id`, `data_hora_inicio`, `data_hora_fim`.
   - Crie uma tabela `servicos` com `id`, `nome`, `duracao_minutos`, `preco`.
   - Crie uma tabela `barbeiros` com `id`, `nome`.

**2. API Endpoints (Rotas no Express.js):**
   - `GET /api/horarios-disponiveis`:
     - Recebe `data`, `servico_id`, `barbeiro_id` como parâmetros.
     - **Lógica:** Consulta a tabela `agendamentos` para a data e o barbeiro fornecidos. Com base nos agendamentos existentes e na duração do serviço solicitado, calcula e retorna uma lista de horários de início disponíveis para aquele dia.
   - `POST /api/agendar`:
     - Recebe os dados do formulário (passo 4 e 5).
     - **Lógica:** Valida os dados. Verifica uma última vez se o horário ainda está disponível. Se estiver, insere o novo agendamento na tabela `agendamentos`. Retorna uma mensagem de sucesso. Se não, retorna uma mensagem de erro (ex: "Desculpe, este horário acabou de ser preenchido.").

**3. Automatização:**
   - **Confirmação:** Após o agendamento ser salvo no banco de dados, o sistema poderia (como um recurso avançado) usar um serviço como o Nodemailer para enviar um e-mail de confirmação automático para o cliente.
   - **Gerenciamento:** Crie uma página de administração simples e protegida por senha (ex: `/admin`) onde o dono da barbearia possa ver uma lista de todos os agendamentos do dia/semana e possa manualmente bloquear horários (férias, almoço, etc.).

## Instruções Finais
- O código deve ser bem comentado, especialmente a lógica do backend e a interação com a API no frontend.
- O design deve ser limpo, moderno e masculino, usando uma paleta de cores sóbria (preto, branco, tons de cinza, talvez com um toque de cor como dourado ou vermelho escuro).
- **Prioridade máxima para a experiência mobile (Mobile-First).** O processo de agendamento deve ser extremamente fácil de usar em um celular.
- Crie um arquivo `README.md` detalhado explicando como configurar e rodar o projeto e como personalizar as informações da barbearia (nome, serviços, preços, etc.).